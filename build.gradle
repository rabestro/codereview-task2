plugins {
	id 'groovy'
	id 'jacoco'
	id "org.sonarqube" version "3.4.0.2513"
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
}

group = 'com.yourcodereview.jegors'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'com.h2database:h2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// Spock Framework
	testImplementation platform('org.codehaus.groovy:groovy-bom:3.0.9')
	testImplementation platform('org.spockframework:spock-bom:2.0-groovy-3.0')
	testImplementation 'org.spockframework:spock-core'
	testImplementation 'org.spockframework:spock-spring'

	// Spock Reports
	testRuntimeClasspath 'com.athaydes:spock-reports:2.3.0-groovy-3.0'

}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "rabestro_codereview-task2"
		property "sonar.organization", "rabestro"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}